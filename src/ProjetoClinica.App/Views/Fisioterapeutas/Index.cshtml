@model IEnumerable<ProjetoClinica.App.ViewModels.FisioterapeutaViewModel>

@{
    ViewData["Title"] = "Lista de Fisioterapeutas";

   
}


@using (Html.BeginForm("Index", "Fisioterapeutas", FormMethod.Get))
{
<div class="row g-2">
    <div class="col-sm">       
        <input class="form-control" type="text" placeholder="ID" aria-label="default input example" id="Id" name="Id">
    </div>
    <div class="col-sm-9">       
            <input class="form-control" type="text" placeholder="Nome" aria-label="default input example" id="Nome" name="Nome">
    </div>   
    <div class="col-auto">
            <button type="submit" class="btn btn-primary mb-3"><i class="bi bi-search"></i> Pesquisar</button>  
    </div>
    <div class="col-auto">
        <a asp-action="Create" class="btn btn-outline-primary fw-bold"><i class="bi bi-person-plus-fill"></i> Novo</a>
    </div>
</div>
}

<table id="registros-table-fisio" class="table-selectable table table-hover table-bordered table-striped table-responsive">
    <thead class="bg-primary bg-gradient border-bottom box-shadow mb-2 text-white">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cpf)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rg)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Celular)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Especialidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Disponivel)
            </th>           
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-record-id="@item.Id" ondblclick="abrirPaginaEdicao(@item.Id)">
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Nome)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cpf)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rg)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Celular)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Especialidade)
                </td>
                <td>
                    @{
                        if (item.Disponivel == true)
                        {
                            <div><i class="bi bi-check-circle-fill text-success"></i></div>
                        }
                        else
                        {
                            <div><i class="bi bi-x-circle-fill text-danger"></i></div>
                        }
                    }
                </td>
            </tr>
        }
    </tbody>

</table>

@{   
    if (Model.ToList().Count > 0)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-sm-center">
                @if (ViewData["Page"] != null && ViewData["PageSize"] != null && ViewData["TotalPages"] != null)
                {
                    int currentPage = (int)ViewData["Page"];
                    int totalPages = (int)ViewData["TotalPages"];
                    int pageSize = (int)ViewData["PageSize"];

                    <li class="page-item @((currentPage == 1) ? "disabled" : "")">
                        <a class="page-link" href="?page=1&pageSize=@pageSize" title="Primeira"><i class="bi bi-caret-left-fill"></i></a>
                    </li>
                    <li class="page-item @((currentPage == 1) ? "disabled" : "")">
                        <a class="page-link" href="?page=@(currentPage - 1)&pageSize=@pageSize" title="Anterior"><i class="bi bi-caret-left"></i></a>
                    </li>

                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @((i == currentPage) ? "active" : "")">
                            <a class="page-link" href="?page=@i&pageSize=@pageSize">@i</a>
                        </li>
                    }

                    <li class="page-item @((currentPage == totalPages) ? "disabled" : "")">
                        <a class="page-link" href="?page=@(currentPage + 1)&pageSize=@pageSize" title="Próxima"><i class="bi bi-caret-right"></i></a>
                    </li>
                    <li class="page-item @((currentPage == totalPages) ? "disabled" : "")">
                        <a class="page-link" href="?page=@totalPages&pageSize=@pageSize" title="Última"><i class="bi bi-caret-right-fill"></i></a>
                    </li>
                }
            </ul>
        </nav>
    }
}

<script>
    // Obter ID do elemento para pesquisa
    document.getElementById("search-button").addEventListener("click", function () {
        var id = document.getElementById("search-input").value;
        var url = "/Fisioterapeutas/PesquisarPorId?id=" + id;

        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function () {
            if (this.readyState === 4 && this.status === 200) {
                document.getElementById("registros-table").innerHTML = this.responseText;
            }
        };
        xhttp.open("GET", url, true);
        xhttp.send();
    });

    function abrirPaginaEdicao(idRegistro) {
        // Construa a URL da página de edição com o ID do registro
        var urlEdicao = 'Fisioterapeutas/Edit/' + idRegistro;

        // Redirecione para a página de edição na mesma guia
        window.location.href = urlEdicao;
    }


</script>
